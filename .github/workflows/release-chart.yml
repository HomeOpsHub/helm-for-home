name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Install chart-releaser
        run: |
          curl -sSL https://github.com/helm/chart-releaser/releases/download/v1.5.0/chart-releaser_1.5.0_linux_amd64.tar.gz | tar xz -C /usr/local/bin cr

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Ensure gh-pages branch and index.yaml exist
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          GITHUB_USERNAME: "${{ github.repository_owner }}"
          REPOSITORY_NAME: "${{ github.event.repository.name }}"
        run: |
          set -e
          # Fetch all branches
          git fetch origin
          # Check if gh-pages branch exists locally; if not, fetch it
          if git show-ref --verify --quiet refs/heads/gh-pages; then
            echo "gh-pages branch exists locally."
          else
            echo "gh-pages branch does not exist locally. Checking out."
            git checkout -b gh-pages origin/gh-pages || git checkout --orphan gh-pages
          fi
          # Switch to gh-pages branch
          git checkout gh-pages
          # Ensure index.yaml exists
          if [ ! -f index.yaml ]; then
            echo "Creating empty index.yaml"
            touch index.yaml
            git add index.yaml
            git commit -m "Initialize index.yaml"
            git push origin gh-pages
          else
            echo "index.yaml already exists."
          fi
          # Switch back to the original branch
          git checkout "${GITHUB_REF#refs/heads/}"

      - name: Run chart-releaser for each chart in subcategories
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          GITHUB_USERNAME: "${{ github.repository_owner }}"
          REPOSITORY_NAME: "${{ github.event.repository.name }}"
          CHART_REPO_URL: "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
        run: |
          set -e
          mkdir -p .cr-release-packages
          mkdir -p .cr-index
          for category in charts/*; do
            if [ -d "$category" ]; then
              for chart in "$category"/*; do
                if [ -d "$chart" ]; then
                  echo "Packaging chart: $chart"
                  cr package "$chart"
                fi
              done
            fi
          done
          cr upload -o $GITHUB_USERNAME -r $REPOSITORY_NAME
          cr index -o $GITHUB_USERNAME -r $REPOSITORY_NAME -c $CHART_REPO_URL --package-path .cr-release-packages --index-path index.yaml

      - name: Commit index.yaml
        run: |
          git fetch origin gh-pages
          git checkout gh-pages
          cp index.yaml ./index.yaml
          git add index.yaml
          git commit -m "Update index.yaml"
          git push origin gh-pages
