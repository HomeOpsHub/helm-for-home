# Default values for glances.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nicolargo/glances
  tag: "latest-full"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  # Required for system monitoring
  privileged: true
  hostNetwork: true
  hostPID: true

securityContext:
  privileged: true
  # capabilities:
  #   add:
  #   - SYS_ADMIN
  #   - SYS_PTRACE
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 61208
  targetPort: 61208

# Glances configuration
glances:
  # Web server mode enabled by default
  mode: "web"
  # Additional command line options
  options: "-w"
  # Configuration file content (optional)
  config: ""

# Volume mounts for system monitoring
volumeMounts:
  - name: proc
    mountPath: /host/proc
    readOnly: true
  - name: sys
    mountPath: /host/sys
    readOnly: true
  - name: docker-sock
    mountPath: /var/run/docker.sock
    readOnly: true

volumes:
  - name: proc
    hostPath:
      path: /proc
  - name: sys
    hostPath:
      path: /sys
  - name: docker-sock
    hostPath:
      path: /var/run/docker.sock

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: glances.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: glances-tls
  #    hosts:
  #      - glances.local

ingressRoute:
  enabled: false
  metadata:
    name: ""
    namespace: ""
    annotations: {}
  spec:
    entrypoints: []
    routes: []
    tls:
      enabled: false

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 500m
  #   memory: 512Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
additionalVolumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
additionalVolumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables
env: []
# - name: TZ
#   value: "UTC"
# - name: GLANCES_OPT
#   value: "-w"
